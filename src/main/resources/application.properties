spring.application.name=community
# ServeProperties
server.port=8080
server.servlet.context_path=/community

# ThymleafProperties
spring.thymleaf.cache=false

# ==============================
# DataSource Properties
# ==============================

# JDBC driver for MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JDBC connection URL
# - characterEncoding=utf-8 : Use UTF-8 character set
# - useSSL=false : Disable SSL (for local development)
# - serverTimezone=Europe/Dublin : Set timezone to Ireland
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Europe/Dublin

# Database username
spring.datasource.username=root
# Database password
spring.datasource.password=5TrGn555

# DataSource implementation
# HikariCP is the default high-performance connection pool in Spring Boot
spring.datasource.type=com.zaxxer.hikari.HikariDataSource

# ==============================
# HikariCP Connection Pool Settings
# ==============================

# Maximum number of connections in the pool
spring.datasource.hikari.maximum-pool-size=15

# Minimum number of idle connections to keep in the pool
spring.datasource.hikari.minimum-idle=5

# Maximum idle time (in milliseconds) before an idle connection is removed from the pool
spring.datasource.hikari.idle-timeout=30000

# ==============================
# MyBatis Properties
# ==============================
# Location of MyBatis mapper XML files
# 'classpath:' means the folder is searched from the resources directory.
# Here it looks for all XML files under src/main/resources/mapper/
mybatis.mapper-locations=classpath:mapper/*.xml

# Package containing entity classes (POJOs) for MyBatis type aliases
# Allows using class names directly in mapper XML without full package name.
mybatis.type-aliases-package=com.haoshe.community.entity

# NOTE:
# Based on these configurations, you need to create:
# - Directory for mapper XML files: src/main/resources/mapper
# - Java package for entity classes: com.haoshe.community.entity

# Enable JDBC's getGeneratedKeys() support for auto-increment primary keys
# This lets MyBatis automatically retrieve database-generated keys after INSERT.
mybatis.configuration.useGeneratedKeys=true

# Enable automatic mapping from database column names with underscores
# to Java camelCase property names (e.g., user_name ? userName)
mybatis.configuration.mapUnderscoreToCamelCase=true

# logger
# Enable DEBUG logging for all classes in the package com.haoshe.community
logging.level.com.haoshe.community=debug
# output log file into a file
# logging.file.name=/Users/haoshe/Desktop/workspace/data/community.log